{
  parserClass="ru.usb7.idea.plugin.perl.parser.PerlParser"
  stubParserClass="ru.usb7.idea.plugin.perl.parser.GeneratedParserUtilBase"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Perl"
  psiImplClassSuffix="Impl"
  psiPackage="ru.usb7.idea.plugin.perl.psi"
  psiImplPackage="ru.usb7.idea.plugin.perl.psi.impl"

  elementTypeHolderClass="ru.usb7.idea.plugin.perl.psi.PerlTypes"
  elementTypeClass="ru.usb7.idea.plugin.perl.psi.PerlElementType"
  tokenTypeClass="ru.usb7.idea.plugin.perl.psi.PerlTokenType"
}

/*
 * package_declaration
 * include
 * special_code_block
 * variable_declaration
 * eval
 * code_block
 * code
 * comment
 * perlpod
 * sub
 */

perlFile ::= perl_item*

private perl_item ::= (package_declaration|include|special_code_block|code|COMMENT|perlpod|CRLF)

package_declaration ::= PACKAGE_KEYWORD MODULE_NAME SEMICOLON

include ::= USE_REQURE_KEYWORD MODULE_NAME SEMICOLON

special_code_block ::= SPECIAL_BLOCK_KEYWORD code_block SEMICOLON?

variable_declaration ::= VARIABLE_DECLARATION_KEYWORD variable SEMICOLON? CRLF*

eval ::= EVAL_KEYWORD (code_block | literal) SEMICOLON? CRLF*

code_block ::= CURLYBRACKET_OPEN CRLF* code* CURLYBRACKET_CLOSE CRLF*

code ::= (expression|eval|variable_declaration|eval|code|code_block)

perlpod ::= PERLPOD_START PERLPOD_CONTENT* PERLPOD_END

variable ::= scalar|array|hash

scalar ::= SCALAR_SIGIL ID | literal

array ::= ARRAY_SIGIL ID | (PARENTHESE_OPEN variable PARENTHESE_CLOSE)

hash ::= HASH_SIGIL ID

literal ::= LITERAL_START LITERAL_CONTENT* LITERAL_END

expression ::= ID variable? SEMICOLON? COMMENT? CRLF

